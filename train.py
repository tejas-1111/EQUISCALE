from time import sleep
import shlex
import subprocess

MAX_JOBS = 8
USER = (str(subprocess.run("whoami", stdout=subprocess.PIPE).stdout))[2:-3]
print(USER)

# Possible start/end values
# 0.00625, 0.0125, 0.01875, 0.025, 0.03125, 0.0375, 0.04375, 0.05, 0.05625, 0.0625, 0.06875, 0.075, 0.08125, 0.0875, 0.09375, 0.1
# 0.10625, 0.1125, 0.11875, 0.125, 0.13125, 0.1375, 0.14375, 0.15, 0.15625, 0.1625, 0.16875, 0.175, 0.18125, 0.1875, 0.19375, 0.2
# 0.20625, 0.2125, 0.21875, 0.225, 0.23125, 0.2375, 0.24375, 0.25, 0.25625, 0.2625, 0.26875, 0.275, 0.28125, 0.2875, 0.29375, 0.3
# 0.30625, 0.3125, 0.31875, 0.325, 0.33125, 0.3375, 0.34375, 0.35, 0.35625, 0.3625, 0.36875, 0.375, 0.38125, 0.3875, 0.39375, 0.4
# 0.40625, 0.4125, 0.41875, 0.425, 0.43125, 0.4375, 0.44375, 0.45, 0.45625, 0.4625, 0.46875, 0.475, 0.48125, 0.4875, 0.49375

# Values used to search
# 0.00625, 0.03125, 0.05625, 0.08125, 0.10625, 0.13125, 0.15625, 0.18125, 0.20625, 0.23125, 0.25625, 0.28125, 0.30625, 0.33125, 0.35625, 0.38125, 0.40625, 0.43125, 0.45625, 0.48125

# Entry in setting should be of the form:
# {
#         "model": "RISAN",
#         "dataset": "Compas",
#         "fairness_condition": "Sep",
#         "costs": [0.10625, 0.13125, 0.15625, 0.18125, 0.20625, 0.23125, 0.25625, 0.28125, 0.30625, 0.33125, 0.35625, 0.38125, 0.40625],
# },

settings = [
    # {
    #     "model": "RISAN",
    #     "dataset": "Adult",
    #     "fairness_condition": "None",
    #     "costs": [0.187500, 0.197813, 0.208125, 0.218438, 0.228750, 0.239063, 0.249375, 0.259687, 0.270000, 0.280312, 0.290625, 0.300937, 0.311250, 0.321562, 0.331875, 0.342187, 0.352500, 0.362812, 0.373125, 0.383437, 0.393750],
    # },
    # {
    #     "model": "RISAN",
    #     "dataset": "Adult",
    #     "fairness_condition": "Ind",
    #     "costs": [0.218750, 0.225938, 0.233125, 0.240312, 0.247500, 0.254688, 0.261875, 0.269062, 0.276250, 0.283438, 0.290625, 0.297812, 0.305000, 0.312188, 0.319375, 0.326562, 0.333750, 0.340938, 0.348125, 0.355312, 0.362500],
    # },
    # {
    #     "model": "RISAN",
    #     "dataset": "Adult",
    #     "fairness_condition": "Sep",
    #     "costs": [0.225000, 0.234375, 0.243750, 0.253125, 0.262500, 0.271875, 0.281250, 0.290625, 0.300000, 0.309375, 0.318750, 0.328125, 0.337500, 0.346875, 0.356250, 0.365625, 0.375000, 0.384375, 0.393750, 0.403125, 0.412500],
    # },
    # {
    #     "model": "KP1",
    #     "dataset": "Adult",
    #     "fairness_condition": "None",
    #     "costs": [0.168750, 0.179688, 0.190625, 0.201563, 0.212500, 0.223438, 0.234375, 0.245312, 0.256250, 0.267188, 0.278125, 0.289062, 0.300000, 0.310937, 0.321875, 0.332813, 0.343750, 0.354687, 0.365625, 0.376563, 0.387500],
    # },
    # {
    #     "model": "KP1",
    #     "dataset": "Adult",
    #     "fairness_condition": "Ind",
    #     "costs": [0.212500, 0.220312, 0.228125, 0.235937, 0.243750, 0.251563, 0.259375, 0.267188, 0.275000, 0.282813, 0.290625, 0.298438, 0.306250, 0.314063, 0.321875, 0.329688, 0.337500, 0.345313, 0.353125, 0.360938, 0.368750],
    # },
    # {
    #     "model": "KP1",
    #     "dataset": "Adult",
    #     "fairness_condition": "Sep",
    #     "costs": [0.193750, 0.202500, 0.211250, 0.220000, 0.228750, 0.237500, 0.246250, 0.255000, 0.263750, 0.272500, 0.281250, 0.290000, 0.298750, 0.307500, 0.316250, 0.325000, 0.333750, 0.342500, 0.351250, 0.360000, 0.368750],
    # },



    # {
    #     "model": "RISAN",
    #     "dataset": "German",
    #     "fairness_condition": "None",
    #     "costs": [0.187500, 0.202500, 0.217500, 0.232500, 0.247500, 0.262500, 0.277500, 0.292500, 0.307500, 0.322500, 0.337500, 0.352500, 0.367500, 0.382500, 0.397500, 0.412500, 0.427500, 0.442500, 0.457500, 0.472500, 0.487500],
    # },
    # {
    #     "model": "RISAN",
    #     "dataset": "German",
    #     "fairness_condition": "Ind",
    #     "costs": [0.187500, 0.202813, 0.218125, 0.233438, 0.248750, 0.264062, 0.279375, 0.294687, 0.310000, 0.325313, 0.340625, 0.355938, 0.371250, 0.386563, 0.401875, 0.417188, 0.432500, 0.447813, 0.463125, 0.478438, 0.493750],
    # },
    # {
    #     "model": "RISAN",
    #     "dataset": "German",
    #     "fairness_condition": "Sep",
    #     "costs": [0.181250, 0.196875, 0.212500, 0.228125, 0.243750, 0.259375, 0.275000, 0.290625, 0.306250, 0.321875, 0.337500, 0.353125, 0.368750, 0.384375, 0.400000, 0.415625, 0.431250, 0.446875, 0.462500, 0.478125, 0.493750],
    # },
    # {
    #     "model": "KP1",
    #     "dataset": "German",
    #     "fairness_condition": "None",
    #     "costs": [0.218750, 0.227187, 0.235625, 0.244063, 0.252500, 0.260937, 0.269375, 0.277813, 0.286250, 0.294687, 0.303125, 0.311563, 0.320000, 0.328437, 0.336875, 0.345313, 0.353750, 0.362187, 0.370625, 0.379063, 0.387500],
    # },
    # {
    #     "model": "KP1",
    #     "dataset": "German",
    #     "fairness_condition": "Ind",
    #     "costs": [0.225000, 0.233750, 0.242500, 0.251250, 0.260000, 0.268750, 0.277500, 0.286250, 0.295000, 0.303750, 0.312500, 0.321250, 0.330000, 0.338750, 0.347500, 0.356250, 0.365000, 0.373750, 0.382500, 0.391250, 0.400000],
    # },
    # {
    #     "model": "KP1",
    #     "dataset": "German",
    #     "fairness_condition": "Sep",
    #     "costs": [0.225000, 0.234063, 0.243125, 0.252188, 0.261250, 0.270313, 0.279375, 0.288438, 0.297500, 0.306563, 0.315625, 0.324688, 0.333750, 0.342812, 0.351875, 0.360938, 0.370000, 0.379062, 0.388125, 0.397188, 0.406250],
    # },


    {
        "model": "RISAN",
        "dataset": "Compas",
        "fairness_condition": "None",
        "costs": [0.246875, 0.249844, 0.252812, 0.255781, 0.258750, 0.261719, 0.264688, 0.267656, 0.270625, 0.273594, 0.276563, 0.279531, 0.282500, 0.285469, 0.288438, 0.291406, 0.294375, 0.297344, 0.300313, 0.303281, 0.306250],
    },
    {
        "model": "RISAN",
        "dataset": "Compas",
        "fairness_condition": "Ind",
        "costs": [0.237500, 0.240312, 0.243125, 0.245938, 0.248750, 0.251563, 0.254375, 0.257188, 0.260000, 0.262813, 0.265625, 0.268437, 0.271250, 0.274062, 0.276875, 0.279687, 0.282500, 0.285313, 0.288125, 0.290938, 0.293750],
    },
    {
        "model": "RISAN",
        "dataset": "Compas",
        "fairness_condition": "Sep",
        "costs": [0.231250, 0.238750, 0.246250, 0.253750, 0.261250, 0.268750, 0.276250, 0.283750, 0.291250, 0.298750, 0.306250, 0.313750, 0.321250, 0.328750, 0.336250, 0.343750, 0.351250, 0.358750, 0.366250, 0.373750, 0.381250],
    },
    {
        "model": "KP1",
        "dataset": "Compas",
        "fairness_condition": "None",
        "costs": [0.381250, 0.385625, 0.390000, 0.394375, 0.398750, 0.403125, 0.407500, 0.411875, 0.416250, 0.420625, 0.425000, 0.429375, 0.433750, 0.438125, 0.442500, 0.446875, 0.451250, 0.455625, 0.460000, 0.464375, 0.468750],
    },
    {
        "model": "KP1",
        "dataset": "Compas",
        "fairness_condition": "Ind",
        "costs": [0.387500, 0.391875, 0.396250, 0.400625, 0.405000, 0.409375, 0.413750, 0.418125, 0.422500, 0.426875, 0.431250, 0.435625, 0.440000, 0.444375, 0.448750, 0.453125, 0.457500, 0.461875, 0.466250, 0.470625, 0.475000],
    },
    {
        "model": "KP1",
        "dataset": "Compas",
        "fairness_condition": "Sep",
        "costs": [0.381250, 0.385625, 0.390000, 0.394375, 0.398750, 0.403125, 0.407500, 0.411875, 0.416250, 0.420625, 0.425000, 0.429375, 0.433750, 0.438125, 0.442500, 0.446875, 0.451250, 0.455625, 0.460000, 0.464375, 0.468750],
    },
]


def alive(x):
    return x.poll() is None


processes = []
for s in settings:
    for c in s["costs"]:
        command = f"python -Wi main.py --dataset {s['dataset']} --model {s['model']} --fairness_condition {s['fairness_condition']} --cost {c} --tqdm No"
        cmd = shlex.split(command)
        while len(processes) >= MAX_JOBS:
            processes = list(filter(alive, processes))
            sleep(1)
        # print(cmd)
        p = subprocess.Popen(
            cmd,
            stdout=open(
                f"{s['dataset']}_{s['model']}_{s['fairness_condition']}_{c}.txt", "w"
            ),
        )
        processes.append(p)
        sleep(1)

while len(processes) != 0:
    processes = list(filter(alive, processes))
    sleep(1)
print("Finished")
